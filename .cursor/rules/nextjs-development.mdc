---
description: 
globs: 
alwaysApply: false
---
# Next.js 14 Minimal Web App Development

## App Router Structure
- Use `app/` directory for all routes and layouts
- Keep file structure minimal and flat
- Essential files only:
  - `layout.tsx` for basic metadata and layout
  - `page.tsx` for the main application
  - `globals.css` for bi-color theming

## Component Philosophy
- Prioritize simplicity over complexity
- Use Server Components by default
- Add 'use client' only when absolutely necessary
- Avoid unnecessary file proliferation

## Web App Implementation
- Include proper metadata in layout.tsx
- Support system color scheme in viewport config
- Ensure responsive design across all devices
- Optimize for modern browser features

## Styling Standards
- All styles in `app/globals.css`
- Use CSS custom properties for theming
- Support both light and dark system themes
- Mobile-first responsive design
- Safe area support for mobile devices

## Performance & Accessibility
- Minimize JavaScript bundle size
- Respect prefers-reduced-motion
- Implement proper touch targets (44px minimum)
- Support keyboard navigation
- Ensure proper color contrast in both themes

## Example Minimal Layout
```tsx
import type { Metadata, Viewport } from 'next'
import './globals.css'

export const metadata: Metadata = {
  title: 'App Title',
  description: 'App description',
}

export const viewport: Viewport = {
  themeColor: [
    { media: '(prefers-color-scheme: light)', color: '#ffffff' },
    { media: '(prefers-color-scheme: dark)', color: '#000000' },
  ],
  colorScheme: 'light dark',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body>{children}</body>
    </html>
  )
}
```

## Development Commands
- Focus on essential commands only
- `npm run dev` for development
- `npm run build` for production
- `npm run test-local` for local testing
